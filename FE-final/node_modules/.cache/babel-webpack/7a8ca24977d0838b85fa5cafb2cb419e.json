{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/taskreminder.service\";\nimport * as i2 from \"../services/taskarchive.service\";\nimport * as i3 from \"ngx-toastr\";\n\nfunction TasksComponent_app_task_card_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-task-card\", 16);\n  }\n\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"task\", task_r1);\n  }\n}\n\nexport let TasksComponent = /*#__PURE__*/(() => {\n  class TasksComponent {\n    constructor(reminderService, archiveService, toastr) {\n      this.reminderService = reminderService;\n      this.archiveService = archiveService;\n      this.toastr = toastr;\n      this.overDueCount = 0;\n      this.nearDueCount = 0;\n      this.nearDueMessage = 'You have no tasks pending in Near Due!';\n      this.overDueMessage = 'You have no tasks pending in Over Due!';\n    }\n\n    ngOnInit() {\n      let userID = localStorage.getItem('currentUserID');\n      this.currentUserID = parseInt(userID == null ? '' : userID);\n      this.getOverDue();\n      this.getNearDue();\n      this.nearDueMessage = `You have got ${this.nearDueCount} messages in Near Due!`;\n      setTimeout(() => this.showNearDueToast(this.nearDueCount), 2000);\n      this.overDueMessage = `You have got ${this.overDueCount} messages in Over Due!`;\n      setTimeout(() => this.showOverDueToast(this.overDueCount), 3000);\n      this.getAllTasks();\n    }\n\n    getAllTasks() {\n      this.reminderService.getAllTasks(this.currentUserID).subscribe(res => this.tasksToDisplay = res); // this.tasksToDisplay = DummyTasks\n    }\n\n    getPending() {\n      this.reminderService.getPending(this.currentUserID).subscribe(res => this.tasksToDisplay = res); // this.tasksToDisplay = [DummyTasks[0], DummyTasks[1], DummyTasks[3], DummyTasks[5], DummyTasks[6], DummyTasks[7], DummyTasks[8]]\n    }\n\n    getCompleted() {\n      this.reminderService.getCompleted(this.currentUserID).subscribe(res => {\n        this.tasksToDisplay = res;\n        console.log(this.tasksToDisplay);\n      }); // this.tasksToDisplay = [DummyTasks[2], DummyTasks[4]]\n    }\n\n    getHighPriority() {\n      this.reminderService.getHighPriorityTasks(this.currentUserID).subscribe(res => this.tasksToDisplay = res); // this.tasksToDisplay = [DummyTasks[0], DummyTasks[7]]\n    }\n\n    getNearDue() {\n      this.reminderService.getNearDueTasks(this.currentUserID).subscribe(res => {\n        this.tasksToDisplay = res;\n        this.nearDueCount = res.length;\n      }); // this.tasksToDisplay = [DummyTasks[2], DummyTasks[7]]\n    }\n\n    getOverDue() {\n      this.reminderService.getOverDueTasks(this.currentUserID).subscribe(res => {\n        this.tasksToDisplay = res;\n        this.overDueCount = res.length;\n      }); // this.tasksToDisplay = [DummyTasks[5]]\n    }\n\n    getArchived() {\n      this.archiveService.getAllArchivedTasks(this.currentUserID).subscribe(res => this.tasksToDisplay = res); // this.tasksToDisplay = [DummyTasks[4], DummyTasks[8]]\n    }\n\n    showOverDueToast(count) {\n      this.toastr.warning('Over Due', `You've ${count} tasks in overdue!`, {\n        timeOut: 22000,\n        positionClass: 'toast-top-right',\n        closeButton: true,\n        progressBar: true,\n        progressAnimation: 'increasing'\n      });\n    }\n\n    showNearDueToast(count) {\n      this.toastr.info('Near Due', `You've ${count} tasks in neardue!`, {\n        timeOut: 18000,\n        positionClass: 'toast-top-right',\n        closeButton: true,\n        progressBar: true,\n        progressAnimation: 'increasing'\n      });\n    }\n\n  }\n\n  TasksComponent.ɵfac = function TasksComponent_Factory(t) {\n    return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TaskReminderService), i0.ɵɵdirectiveInject(i2.TaskArchiveService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n\n  TasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksComponent,\n    selectors: [[\"app-tasks\"]],\n    decls: 40,\n    vars: 1,\n    consts: [[1, \"container-fluid\"], [\"id\", \"sidebarMenu\", 1, \"collapse\", \"d-lg-block\", \"sidebar\", \"collapse\", \"bg-white\"], [1, \"position-sticky\"], [1, \"list-group\", \"list-group-flush\", \"mx-3\", \"mt-4\"], [\"href\", \"#\", \"aria-current\", \"true\", 1, \"list-group-item\", \"list-group-item-action\", \"py-2\", \"ripple\", \"active\"], [\"src\", \"assets/tasks.png\", \"height\", \"20\", \"alt\", \"TODO\", \"loading\", \"lazy\", 2, \"margin-top\", \"-1px\"], [1, \"list-group-item\", \"list-group-item-action\", \"py-2\", \"ripple\", 3, \"click\"], [1, \"fas\", \"fa-tasks\", \"fa-fw\", \"me-3\"], [1, \"fas\", \"fa-spinner\", \"fa-fw\", \"me-3\"], [1, \"fas\", \"fa-exclamation-circle\", \"fa-fw\", \"me-3\"], [1, \"fas\", \"fa-exclamation-triangle\", \"fa-fw\", \"me-3\"], [1, \"fas\", \"fa-exclamation\", \"fa-fw\", \"me-3\"], [1, \"fas\", \"fa-check-circle\", \"fa-fw\", \"me-3\"], [1, \"fas\", \"fa-archive\", \"fa-fw\", \"me-3\"], [1, \"row\", \"m-5\"], [\"class\", \"p-3 col-lg-3 col-md-6 col-sm-12 h-25\", \"style\", \"margin: auto;\", 3, \"task\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-3\", \"col-lg-3\", \"col-md-6\", \"col-sm-12\", \"h-25\", 2, \"margin\", \"auto\", 3, \"task\"]],\n    template: function TasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"header\");\n        i0.ɵɵelementStart(2, \"nav\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"a\", 4);\n        i0.ɵɵelementStart(6, \"span\");\n        i0.ɵɵelement(7, \"img\", 5);\n        i0.ɵɵelementStart(8, \"b\");\n        i0.ɵɵtext(9, \"TO-DO Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function TasksComponent_Template_a_click_10_listener() {\n          return ctx.getAllTasks();\n        });\n        i0.ɵɵelement(11, \"i\", 7);\n        i0.ɵɵelementStart(12, \"span\");\n        i0.ɵɵtext(13, \"All Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function TasksComponent_Template_a_click_14_listener() {\n          return ctx.getPending();\n        });\n        i0.ɵɵelement(15, \"i\", 8);\n        i0.ɵɵelementStart(16, \"span\");\n        i0.ɵɵtext(17, \"Pending\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function TasksComponent_Template_a_click_18_listener() {\n          return ctx.getHighPriority();\n        });\n        i0.ɵɵelement(19, \"i\", 9);\n        i0.ɵɵelementStart(20, \"span\");\n        i0.ɵɵtext(21, \"High Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function TasksComponent_Template_a_click_22_listener() {\n          return ctx.getOverDue();\n        });\n        i0.ɵɵelement(23, \"i\", 10);\n        i0.ɵɵelementStart(24, \"span\");\n        i0.ɵɵtext(25, \"Over Due\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function TasksComponent_Template_a_click_26_listener() {\n          return ctx.getNearDue();\n        });\n        i0.ɵɵelement(27, \"i\", 11);\n        i0.ɵɵelementStart(28, \"span\");\n        i0.ɵɵtext(29, \"Near Due\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function TasksComponent_Template_a_click_30_listener() {\n          return ctx.getCompleted();\n        });\n        i0.ɵɵelement(31, \"i\", 12);\n        i0.ɵɵelementStart(32, \"span\");\n        i0.ɵɵtext(33, \"Completed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function TasksComponent_Template_a_click_34_listener() {\n          return ctx.getArchived();\n        });\n        i0.ɵɵelement(35, \"i\", 13);\n        i0.ɵɵelementStart(36, \"span\");\n        i0.ɵɵtext(37, \"Archive\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 14);\n        i0.ɵɵtemplate(39, TasksComponent_app_task_card_39_Template, 1, 1, \"app-task-card\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(39);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasksToDisplay);\n      }\n    },\n    styles: [\"body[_ngcontent-%COMP%]{background-color:#fbfbfb}@media (min-width: 991.98px){main[_ngcontent-%COMP%]{padding-left:240px}}.sidebar[_ngcontent-%COMP%]{position:fixed;top:0;bottom:0;left:0;padding:58px 0 0;box-shadow:0 2px 5px 0 rgb(0 0 0/5%),0 2px 10px 0 rgb(0 0 0/5%);width:240px;z-index:600}@media (max-width: 991.98px){.sidebar[_ngcontent-%COMP%]{width:100%}}.sidebar[_ngcontent-%COMP%]   .active[_ngcontent-%COMP%]{border-radius:5px;box-shadow:0 2px 5px 0 rgb(0 0 0/16%),0 2px 10px 0 rgb(0 0 0/12%)}.sidebar-sticky[_ngcontent-%COMP%]{position:relative;top:0;height:calc(100vh - 48px);padding-top:.5rem;overflow-x:hidden;overflow-y:auto}\"]\n  });\n  return TasksComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}