{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Task } from '../models/Task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"../services/taskmanager.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"angular-bootstrap-md\";\n\nfunction TaskFormComponent_mdb_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mdb-error\", 33);\n    i0.ɵɵtext(1, \"Title is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskFormComponent_mdb_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mdb-error\", 34);\n    i0.ɵɵtext(1, \"Write some content about your task\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskFormComponent_mdb_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mdb-error\", 34);\n    i0.ɵɵtext(1, \"Category should not be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskFormComponent_mdb_error_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mdb-error\", 34);\n    i0.ɵɵtext(1, \"Due date should not be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TaskFormComponent = /*#__PURE__*/(() => {\n  class TaskFormComponent {\n    constructor(modalRef, managerService, router) {\n      this.modalRef = modalRef;\n      this.managerService = managerService;\n      this.router = router; //Validation\n\n      this.taskForm = new FormGroup({\n        title: new FormControl('', [Validators.required]),\n        desciption: new FormControl('', [Validators.required]),\n        category: new FormControl('', [Validators.required]),\n        dueDate: new FormControl('', [Validators.required]),\n        priorityLevel: new FormControl('', [Validators.required])\n      });\n    }\n\n    get title() {\n      return this.taskForm.get('title');\n    }\n\n    get desciption() {\n      return this.taskForm.get('desciption');\n    }\n\n    get category() {\n      return this.taskForm.get('category');\n    }\n\n    get dueDate() {\n      return this.taskForm.get('dueDate');\n    }\n\n    get priorityLevel() {\n      return this.taskForm.get('priorityLevel');\n    }\n\n    ngOnInit() {\n      //get loggenIn UserID\n      let userID = localStorage.getItem('currentUserID');\n      this.currentUserID = parseInt(userID == null ? '' : userID); //Get Latest Task Id\n\n      this.managerService.getLatestTaskID(this.currentUserID).subscribe(response => {\n        this.latestTaskID = response;\n        console.log(this.latestTaskID);\n        this.id = this.latestTaskID + 1;\n      });\n    } // Form Submit\n\n\n    addTask() {\n      if (this.taskForm.value.title == '' && this.taskForm.value.desciption == '' && this.taskForm.value.category == '' && this.taskForm.value.dueDate == '') {\n        alert(\"Enter Mandatory Fields!\");\n      } else {\n        let newTask = new Task(this.id, this.taskForm.value.title, this.taskForm.value.desciption, this.taskForm.value.dueDate, this.taskForm.value.priorityLevel, this.taskForm.value.category);\n        console.log(newTask);\n        this.managerService.addNewTask(this.currentUserID, newTask).subscribe(response => {\n          console.log(response);\n          this.closeModel();\n          this.router.navigateByUrl('/cards');\n        });\n      }\n    } // Close Model\n\n\n    closeModel() {\n      this.modalRef.hide();\n    }\n\n  }\n\n  TaskFormComponent.ɵfac = function TaskFormComponent_Factory(t) {\n    return new (t || TaskFormComponent)(i0.ɵɵdirectiveInject(i1.BsModalRef), i0.ɵɵdirectiveInject(i2.TaskManagerService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  TaskFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskFormComponent,\n    selectors: [[\"app-task-form\"]],\n    decls: 58,\n    vars: 5,\n    consts: [[\"id\", \"taskModel\", \"role\", \"dialog\", \"aria-labelledby\", \"taskModelForm\", \"aria-hidden\", \"true\", 1, \"modal-content\", \"text-color\"], [1, \"modal-header\"], [1, \"\"], [\"type\", \"button\", \"aria-label\", \"Close\", \"data-dismiss\", \"#modal-content\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [\"name\", \"taskForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-12\"], [1, \"form-outline\"], [\"for\", \"title\"], [\"type\", \"text\", \"name\", \"title\", \"id\", \"title\", \"formControlName\", \"title\", 1, \"form-control\"], [\"class\", \"text-danger ml-4 mt-6\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"desciption\"], [\"type\", \"text\", \"name\", \"desciption\", \"id\", \"desciption\", \"formControlName\", \"desciption\", \"rows\", \"3\", 1, \"form-control\"], [\"class\", \"text-danger mx-4\", 4, \"ngIf\"], [\"for\", \"category\"], [\"type\", \"text\", \"name\", \"category\", \"id\", \"category\", \"formControlName\", \"category\", 1, \"form-control\"], [1, \"col-lg-5\"], [\"for\", \"dueDate\"], [\"type\", \"date\", \"name\", \"dueDate\", \"id\", \"dueDate\", \"formControlName\", \"dueDate\", 1, \"form-control\"], [1, \"col-lg-7\"], [1, \"form-check\", \"form-check-inline\"], [\"for\", \"high\"], [\"id\", \"high\", \"type\", \"radio\", \"formControlName\", \"priorityLevel\", \"value\", \"HIGH\", \"name\", \"priorityLevel\", 1, \"form-check-control\"], [\"for\", \"medium\"], [\"id\", \"medium\", \"type\", \"radio\", \"formControlName\", \"priorityLevel\", \"value\", \"MEDIUM\", \"name\", \"priorityLevel\", 1, \"form-check-control\"], [\"for\", \"low\"], [\"id\", \"low\", \"type\", \"radio\", \"formControlName\", \"priorityLevel\", \"value\", \"LOW\", \"name\", \"priorityLevel\", 1, \"form-check-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"id\", \"closebtn\", \"data-dismiss\", \"#modal-content\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", \"value\", \"Save\", 1, \"btn\", \"btn-save\"], [1, \"text-danger\", \"ml-4\", \"mt-6\"], [1, \"text-danger\", \"mx-4\"]],\n    template: function TaskFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h6\", 2);\n        i0.ɵɵtext(3, \"Add New Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function TaskFormComponent_Template_button_click_4_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵelementStart(5, \"span\", 4);\n        i0.ɵɵtext(6, \"\\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function TaskFormComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementStart(12, \"label\", 10);\n        i0.ɵɵtext(13, \"Task Title \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, TaskFormComponent_mdb_error_15_Template, 2, 0, \"mdb-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementStart(17, \"div\", 7);\n        i0.ɵɵelementStart(18, \"div\", 8);\n        i0.ɵɵelementStart(19, \"div\", 13);\n        i0.ɵɵelementStart(20, \"label\", 14);\n        i0.ɵɵtext(21, \"Task Description \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"textarea\", 15);\n        i0.ɵɵtemplate(23, TaskFormComponent_mdb_error_23_Template, 2, 0, \"mdb-error\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 7);\n        i0.ɵɵelementStart(25, \"div\", 8);\n        i0.ɵɵelementStart(26, \"div\", 13);\n        i0.ɵɵelementStart(27, \"label\", 17);\n        i0.ɵɵtext(28, \"Category \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 18);\n        i0.ɵɵtemplate(30, TaskFormComponent_mdb_error_30_Template, 2, 0, \"mdb-error\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 7);\n        i0.ɵɵelementStart(32, \"div\", 19);\n        i0.ɵɵelementStart(33, \"div\", 9);\n        i0.ɵɵelementStart(34, \"label\", 20);\n        i0.ɵɵtext(35, \"Due Date \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 21);\n        i0.ɵɵtemplate(37, TaskFormComponent_mdb_error_37_Template, 2, 0, \"mdb-error\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 22);\n        i0.ɵɵelementStart(39, \"div\", 13);\n        i0.ɵɵelementStart(40, \"p\");\n        i0.ɵɵtext(41, \"Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 23);\n        i0.ɵɵelementStart(43, \"label\", 24);\n        i0.ɵɵelement(44, \"input\", 25);\n        i0.ɵɵtext(45, \" High\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 23);\n        i0.ɵɵelementStart(47, \"label\", 26);\n        i0.ɵɵelement(48, \"input\", 27);\n        i0.ɵɵtext(49, \" Medium\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 23);\n        i0.ɵɵelementStart(51, \"label\", 28);\n        i0.ɵɵelement(52, \"input\", 29);\n        i0.ɵɵtext(53, \" Low\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"div\", 30);\n        i0.ɵɵelementStart(55, \"button\", 31);\n        i0.ɵɵlistener(\"click\", function TaskFormComponent_Template_button_click_55_listener() {\n          return ctx.closeModel();\n        });\n        i0.ɵɵtext(56, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(57, \"input\", 32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.title && ctx.title.invalid && (ctx.title.dirty || ctx.title.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.desciption && ctx.desciption.invalid && (ctx.desciption.dirty || ctx.desciption.touched));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.category && ctx.category.invalid && (ctx.category.dirty || ctx.category.touched));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.dueDate && ctx.dueDate.invalid && (ctx.dueDate.dirty || ctx.dueDate.touched));\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i5.NgIf, i4.RadioControlValueAccessor, i6.MdbErrorDirective],\n    styles: [\"\"]\n  });\n  return TaskFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}