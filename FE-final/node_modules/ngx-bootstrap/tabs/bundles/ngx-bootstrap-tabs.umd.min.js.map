{"version":3,"sources":["../../../../src/tabs/ng-transclude.directive.ts","../../../../src/tabs/tabset.config.ts","../../../../src/tabs/tabset.component.ts","../../../../src/tabs/tab.directive.ts","../../../../src/tabs/tab-heading.directive.ts","../../../../src/tabs/tabs.module.ts"],"names":["NgTranscludeDirective","viewRef","this","Object","defineProperty","prototype","_ngTransclude","templateRef","createEmbeddedView","Directive","args","selector","ViewContainerRef","Input","type","isKeysAllowed","ariaLabel","Injectable","providedIn","TabsetComponent","config","renderer","elementRef","clazz","tabs","classMap","isDestroyed","_vertical","_justified","_type","_isKeysAllowed","assign","value","setClassMap","ngOnDestroy","addTab","tab","push","active","length","removeTab","options","reselect","emit","index","indexOf","hasAvailableTabs","newActiveIndex","getClosestTabIndex","removed","splice","nativeElement","parentNode","removeChild","keyNavActions","event","list","Array","from","querySelectorAll","keyCode","key","preventDefault","click","removable","focus","lastTab","shift","i","classList","contains","firstTab","previousTab","nextTab","tabsLength","step","prevIndex","nextIndex","disabled","_a","vertical","justified","Component","template","TabsetConfig","Renderer2","ElementRef","HostBinding","TabDirective","tabset","selectTab","EventEmitter","deselect","addClass","role","_active","_customClass","customClass","_this","split","forEach","cssClass","removeClass","trim","id","ngOnInit","exportAs","Output","headingRef","TemplateRef","TabsModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","TabHeadingDirective","exports"],"mappings":"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","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngTransclude]'\n})\nexport class NgTranscludeDirective {\n  viewRef: ViewContainerRef;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected _ngTransclude?: TemplateRef<any>;\n\n  @Input()\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  set ngTransclude(templateRef: TemplateRef<any> | undefined) {\n    this._ngTransclude = templateRef;\n    if (templateRef) {\n      this.viewRef.createEmbeddedView(templateRef);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get ngTransclude(): TemplateRef<any> | undefined {\n    return this._ngTransclude;\n  }\n\n  constructor(viewRef: ViewContainerRef) {\n    this.viewRef = viewRef;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabsetConfig {\n  /** provides default navigation context class: 'tabs' or 'pills' */\n  type = 'tabs';\n  /** provides possibility to set keyNavigations enable or disable, by default is enable */\n  isKeysAllowed = true;\n  /** aria label for tab list */\n  ariaLabel = 'Tabs';\n}\n","import { Component, HostBinding, Input, OnDestroy, Renderer2, ElementRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\nimport { TabsetConfig } from './tabset.config';\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\n@Component({\n  selector: 'tabset',\n  templateUrl: './tabset.component.html',\n  styleUrls: ['./tabs.scss']\n})\nexport class TabsetComponent implements OnDestroy {\n  /** if true tabs will be placed vertically */\n  @Input()\n  get vertical(): boolean {\n    return this._vertical;\n  }\n  set vertical(value: boolean) {\n    this._vertical = value;\n    this.setClassMap();\n  }\n\n  /** if true tabs fill the container and have a consistent width */\n  @Input()\n  get justified(): boolean {\n    return this._justified;\n  }\n  set justified(value: boolean) {\n    this._justified = value;\n    this.setClassMap();\n  }\n\n  /** navigation context class: 'tabs' or 'pills' */\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n  set type(value: string) {\n    this._type = value;\n    this.setClassMap();\n  }\n\n  get isKeysAllowed(): boolean {\n    return this._isKeysAllowed;\n  }\n\n  set isKeysAllowed(value: boolean) {\n    this._isKeysAllowed = value;\n  }\n\n  @HostBinding('class.tab-container') clazz = true;\n\n  tabs: TabDirective[] = [];\n  classMap: { [key: string]: boolean } = {};\n\n  /** aria label for tab list */\n  ariaLabel = 'Tabs';\n\n  protected isDestroyed = false;\n  protected _vertical = false;\n  protected _justified = false;\n  protected _type = 'tabs';\n  protected _isKeysAllowed = true;\n\n  constructor(\n    config: TabsetConfig,\n    private renderer: Renderer2,\n    private elementRef: ElementRef\n  ) {\n    Object.assign(this, config);\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed = true;\n  }\n\n  addTab(tab: TabDirective): void {\n    this.tabs.push(tab);\n    tab.active = this.tabs.length === 1 && !tab.active;\n  }\n\n  removeTab(\n    tab: TabDirective,\n    options = { reselect: true, emit: true }\n  ): void {\n    const index = this.tabs.indexOf(tab);\n    if (index === -1 || this.isDestroyed) {\n      return;\n    }\n    // Select a new tab if the tab to be removed is selected and not destroyed\n    if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n      const newActiveIndex = this.getClosestTabIndex(index);\n      this.tabs[newActiveIndex].active = true;\n    }\n    if (options.emit) {\n      tab.removed.emit(tab);\n    }\n    this.tabs.splice(index, 1);\n    if (tab.elementRef.nativeElement.parentNode) {\n      this.renderer.removeChild(\n        tab.elementRef.nativeElement.parentNode,\n        tab.elementRef.nativeElement\n      );\n    }\n  }\n\n    keyNavActions(event: KeyboardEvent, index: number) {\n    if (!this.isKeysAllowed) {\n      return;\n    }\n    const list: HTMLElement[] = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link'));\n    // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n    if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n      event.preventDefault();\n      const currentTab = list[(index) % list.length];\n      currentTab.click();\n\n      return;\n    }\n\n    if (event.keyCode === 39 || event.key === 'RightArrow') {\n      let nextTab: HTMLElement;\n      let shift = 1;\n\n      do {\n        nextTab = list[(index + shift) % list.length];\n\n        shift++;\n      } while (nextTab.classList.contains('disabled'));\n\n      nextTab.focus();\n\n      return;\n    }\n\n    if (event.keyCode === 37 || event.key === 'LeftArrow') {\n      let previousTab: HTMLElement;\n      let shift = 1;\n      let i = index;\n\n      do {\n        if ((i - shift) < 0) {\n          i = list.length - 1;\n          previousTab = list[i];\n          shift = 0;\n        } else {\n          previousTab = list[i - shift];\n        }\n\n        shift++;\n      } while (previousTab.classList.contains('disabled'));\n\n      previousTab.focus();\n\n      return;\n    }\n\n    if (event.keyCode === 36 || event.key === 'Home') {\n      event.preventDefault();\n\n      let firstTab: HTMLElement;\n      let shift = 0;\n\n      do {\n        firstTab = list[shift % list.length];\n\n        shift++;\n      } while (firstTab.classList.contains('disabled'));\n\n      firstTab.focus();\n\n      return;\n    }\n\n    if (event.keyCode === 35 || event.key === 'End') {\n      event.preventDefault();\n\n      let lastTab: HTMLElement;\n      let shift = 1;\n      let i = index;\n\n      do {\n        if ((i - shift) < 0) {\n          i = list.length - 1;\n          lastTab = list[i];\n          shift = 0;\n        } else {\n          lastTab = list[i - shift];\n        }\n\n        shift++;\n      } while (lastTab.classList.contains('disabled'));\n\n      lastTab.focus();\n\n      return;\n    }\n\n    if (event.keyCode === 46 || event.key === 'Delete') {\n      if (this.tabs[index].removable) {\n        this.removeTab(this.tabs[index]);\n\n        if (list[index + 1]) {\n          list[(index + 1) % list.length].focus();\n\n          return;\n        }\n\n        if (list[list.length - 1]) {\n          list[0].focus();\n        }\n      }\n    }\n  }\n\n  protected getClosestTabIndex(index: number): number {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return -1;\n    }\n\n    for (let step = 1; step <= tabsLength; step += 1) {\n      const prevIndex = index - step;\n      const nextIndex = index + step;\n      if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n        return prevIndex;\n      }\n      if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n        return nextIndex;\n      }\n    }\n\n    return -1;\n  }\n\n  protected hasAvailableTabs(index: number): boolean {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return false;\n    }\n\n    for (let i = 0; i < tabsLength; i += 1) {\n      if (!this.tabs[i].disabled && i !== index) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  protected setClassMap(): void {\n    this.classMap = {\n      'nav-stacked': this.vertical,\n      'flex-column': this.vertical,\n      'nav-justified': this.justified,\n      [`nav-${this.type}`]: true\n    };\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  TemplateRef,\n  OnInit,\n  OnDestroy,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\n\n@Directive({ selector: 'tab, [tab]', exportAs: 'tab' })\nexport class TabDirective implements OnInit, OnDestroy {\n  /** tab header text */\n  @Input() heading?: string;\n  /** tab id. The same id with suffix '-link' will be added to the corresponding &lt;li&gt; element  */\n  @HostBinding('attr.id')\n  @Input() id?: string;\n  /** if true tab can not be activated */\n  @Input() disabled = false;\n  /** if true tab can be removable, additional button will appear */\n  @Input() removable = false;\n  /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n  @Input()\n  get customClass(): string | undefined {\n    return this._customClass;\n  }\n\n  set customClass(customClass: string | undefined) {\n      if (this.customClass) {\n        this.customClass.split(' ').forEach((cssClass: string) => {\n          this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\n        });\n      }\n\n      this._customClass = customClass ? customClass.trim() : '';\n\n      if (this.customClass) {\n        this.customClass.split(' ').forEach((cssClass: string) => {\n          this.renderer.addClass(this.elementRef.nativeElement, cssClass);\n        });\n      }\n  }\n\n  /** tab active state toggle */\n  @HostBinding('class.active')\n  @Input()\n  get active(): boolean | undefined {\n    return this._active;\n  }\n\n  set active(active: boolean | undefined) {\n    if (this._active === active) {\n      return;\n    }\n    if ((this.disabled && active) || !active) {\n      if (this._active && !active) {\n        this.deselect.emit(this);\n        this._active = active;\n      }\n\n      return;\n    }\n\n    this._active = active;\n    this.selectTab.emit(this);\n    this.tabset.tabs.forEach((tab: TabDirective) => {\n      if (tab !== this) {\n        tab.active = false;\n      }\n    });\n  }\n\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n  @Output() selectTab: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n  @Output() deselect: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n  @Output() removed: EventEmitter<TabDirective> = new EventEmitter();\n\n  @HostBinding('class.tab-pane') addClass = true;\n  @HostBinding('attr.role') role = 'tabpanel';\n  @HostBinding('attr.aria-labelledby') get ariaLabelledby(): string {\n    return this.id ? `${this.id}-link` : '';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  headingRef?: TemplateRef<any>;\n  tabset: TabsetComponent;\n  protected _active? = false;\n  protected _customClass = '';\n\n  constructor(\n    tabset: TabsetComponent,\n    public elementRef: ElementRef,\n    public renderer: Renderer2\n  ) {\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n  }\n\n  ngOnInit(): void {\n    this.removable = !!this.removable;\n  }\n\n  ngOnDestroy(): void {\n    this.tabset.removeTab(this, { reselect: false, emit: false });\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\n\n/** Should be used to mark <ng-template> element as a template for tab heading */\n@Directive({ selector: '[tabHeading]' })\nexport class TabHeadingDirective {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  templateRef?: TemplateRef<any>;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(templateRef: TemplateRef<any>, tab: TabDirective) {\n    tab.headingRef = templateRef;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NgTranscludeDirective } from './ng-transclude.directive';\nimport { TabHeadingDirective } from './tab-heading.directive';\nimport { TabDirective } from './tab.directive';\nimport { TabsetComponent } from './tabset.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NgTranscludeDirective,\n    TabDirective,\n    TabsetComponent,\n    TabHeadingDirective\n  ],\n  exports: [\n    TabDirective,\n    TabsetComponent,\n    TabHeadingDirective,\n    NgTranscludeDirective\n  ]\n})\nexport class TabsModule {\n  static forRoot(): ModuleWithProviders<TabsModule> {\n    return {\n      ngModule: TabsModule,\n      providers: []\n    };\n  }\n}\n"]}