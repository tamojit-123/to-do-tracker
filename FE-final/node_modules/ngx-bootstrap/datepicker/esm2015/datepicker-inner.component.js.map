{"version":3,"file":"datepicker-inner.component.js","sourceRoot":"","sources":["../../../../src/datepicker/datepicker-inner.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { DateFormatter } from './date-formatter';\n\ntype CompareDatesFn = (date1: Date, date2: Date) => number;\n\n@Component({\n  selector: 'datepicker-inner',\n  template: `\n    <!--&lt;!&ndash;ng-keydown=\"keydown($event)\"&ndash;&gt;-->\n    <div *ngIf='datepickerMode' class='well well-sm bg-faded p-a card' role='application'>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class DatePickerInnerComponent implements OnInit, OnChanges {\n  @Input() locale?: string;\n  @Input() datepickerMode?: string;\n  @Input() startingDay?: number;\n  @Input() yearRange?: number;\n\n  @Input() minDate?: Date;\n  @Input() maxDate?: Date;\n  @Input() minMode?: string;\n  @Input() maxMode?: string;\n  @Input() showWeeks?: boolean;\n  @Input() formatDay?: string;\n  @Input() formatMonth?: string;\n  @Input() formatYear?: string;\n  @Input() formatDayHeader?: string;\n  @Input() formatDayTitle?: string;\n  @Input() formatMonthTitle?: string;\n  @Input() onlyCurrentMonth?: boolean;\n  @Input() shortcutPropagation?: boolean;\n  @Input() customClass?: { date: Date; mode: string; clazz: string }[];\n  @Input() monthColLimit = 0;\n  @Input() yearColLimit = 0;\n  @Input() dateDisabled?: { date: Date; mode: string }[];\n  @Input() dayDisabled?: number[];\n  @Input() initDate?: Date;\n\n  @Output() selectionDone: EventEmitter<Date> = new EventEmitter<Date>(undefined);\n  @Output() update: EventEmitter<Date> = new EventEmitter<Date>(false);\n  @Output() activeDateChange: EventEmitter<Date> = new EventEmitter<Date>(undefined);\n\n  stepDay = {};\n  stepMonth = {};\n  stepYear = {};\n\n  uniqueId?: string;\n\n  protected modes: string[] = ['day', 'month', 'year'];\n  protected dateFormatter: DateFormatter = new DateFormatter();\n  protected selectedDate?: Date;\n  protected activeDateId?: string;\n  protected refreshViewHandlerDay?: () => void;\n  protected compareHandlerDay?: CompareDatesFn;\n  protected refreshViewHandlerMonth?: () => void;\n  protected compareHandlerMonth?: CompareDatesFn;\n  protected refreshViewHandlerYear?: () => void;\n  protected compareHandlerYear?: CompareDatesFn;\n\n  protected _activeDate?: Date;\n\n  @Input()\n  get activeDate(): Date|undefined {\n    return this._activeDate;\n  }\n\n  set activeDate(value: Date|undefined) {\n    this._activeDate = value;\n  }\n\n  // todo: add formatter value to Date object\n  ngOnInit(): void {\n    // todo: use date for unique value\n    this.uniqueId = `datepicker--${Math.floor(Math.random() * 10000)}`;\n\n    if (this.initDate) {\n      this.activeDate = this.initDate;\n      this.selectedDate = new Date(this.activeDate.valueOf());\n      this.update.emit(this.activeDate);\n    } else if (this.activeDate === undefined) {\n      this.activeDate = new Date();\n    }\n  }\n\n  // this.refreshView should be called here to reflect the changes on the fly\n  ngOnChanges(changes: SimpleChanges): void {\n    this.refreshView();\n    this.checkIfActiveDateGotUpdated(changes.activeDate);\n  }\n\n  // Check if activeDate has been update and then emit the activeDateChange with the new date\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  checkIfActiveDateGotUpdated(activeDate: any): void {\n    if (activeDate && !activeDate.firstChange) {\n      const previousValue = activeDate.previousValue;\n      if (\n        previousValue &&\n        previousValue instanceof Date &&\n        previousValue.getTime() !== activeDate.currentValue.getTime()\n      ) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n    }\n  }\n\n  setCompareHandler(handler: CompareDatesFn, type: string): void {\n    if (type === 'day') {\n      this.compareHandlerDay = handler;\n    }\n\n    if (type === 'month') {\n      this.compareHandlerMonth = handler;\n    }\n\n    if (type === 'year') {\n      this.compareHandlerYear = handler;\n    }\n  }\n\n  compare(date1?: Date, date2?: Date): number | undefined {\n    if (date1 === undefined || date2 === undefined) {\n      return undefined;\n    }\n\n    if (this.datepickerMode === 'day' && this.compareHandlerDay) {\n      return this.compareHandlerDay(date1, date2);\n    }\n\n    if (this.datepickerMode === 'month' && this.compareHandlerMonth) {\n      return this.compareHandlerMonth(date1, date2);\n    }\n\n    if (this.datepickerMode === 'year' && this.compareHandlerYear) {\n      return this.compareHandlerYear(date1, date2);\n    }\n\n    return void 0;\n  }\n\n  setRefreshViewHandler(handler: () => void, type: string): void {\n    if (type === 'day') {\n      this.refreshViewHandlerDay = handler;\n    }\n\n    if (type === 'month') {\n      this.refreshViewHandlerMonth = handler;\n    }\n\n    if (type === 'year') {\n      this.refreshViewHandlerYear = handler;\n    }\n  }\n\n  refreshView(): void {\n    if (this.datepickerMode === 'day' && this.refreshViewHandlerDay) {\n      this.refreshViewHandlerDay();\n    }\n\n    if (this.datepickerMode === 'month' && this.refreshViewHandlerMonth) {\n      this.refreshViewHandlerMonth();\n    }\n\n    if (this.datepickerMode === 'year' && this.refreshViewHandlerYear) {\n      this.refreshViewHandlerYear();\n    }\n  }\n\n  dateFilter(date: Date, format: string): string {\n    return this.dateFormatter.format(date, format, this.locale);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isActive(dateObject: any): boolean {\n    if (this.compare(dateObject.date, this.activeDate) === 0) {\n      this.activeDateId = dateObject.uid;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createDateObject(date: Date, format: string): any {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const dateObject: any = {};\n    dateObject.date = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate()\n    );\n    dateObject.date = this.fixTimeZone(dateObject.date);\n    dateObject.label = this.dateFilter(date, format);\n    dateObject.selected = this.compare(date, this.selectedDate) === 0;\n    dateObject.disabled = this.isDisabled(date);\n    dateObject.current = this.compare(date, new Date()) === 0;\n    dateObject.customClass = this.getCustomClassForDate(dateObject.date);\n\n    return dateObject;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  split(arr: any[], size: number): any[] {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const arrays: any[] = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n\n    return arrays;\n  }\n\n  // Fix a hard-reproducible bug with timezones\n  // The bug depends on OS, browser, current timezone and current date\n  // i.e.\n  // var date = new Date(2014, 0, 1);\n  // console.log(date.getFullYear(), date.getMonth(), date.getDate(),\n  // date.getHours()); can result in \"2013 11 31 23\" because of the bug.\n  fixTimeZone(date: Date): Date {\n    const hours = date.getHours();\n\n    return new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      hours === 23 ? hours + 2 : 0\n    );\n  }\n\n  select(date: Date, isManual = true): void {\n    if (this.datepickerMode === this.minMode) {\n      if (!this.activeDate) {\n        this.activeDate = new Date(0, 0, 0, 0, 0, 0, 0);\n      }\n\n      this.activeDate = new Date(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate()\n      );\n      this.activeDate = this.fixTimeZone(this.activeDate);\n      if (isManual) {\n        this.selectionDone.emit(this.activeDate);\n      }\n    } else {\n      this.activeDate = new Date(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate()\n      );\n      this.activeDate = this.fixTimeZone(this.activeDate);\n      if (isManual && this.datepickerMode) {\n        this.datepickerMode = this.modes[this.modes.indexOf(this.datepickerMode) - 1];\n      }\n    }\n\n    this.selectedDate = new Date(this.activeDate.valueOf());\n    this.update.emit(this.activeDate);\n    this.refreshView();\n  }\n\n  move(direction: number): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let expectedStep: any;\n    if (this.datepickerMode === 'day') {\n      expectedStep = this.stepDay;\n    }\n\n    if (this.datepickerMode === 'month') {\n      expectedStep = this.stepMonth;\n    }\n\n    if (this.datepickerMode === 'year') {\n      expectedStep = this.stepYear;\n    }\n\n    if (expectedStep && this.activeDate) {\n      const year =\n        this.activeDate.getFullYear() + direction * (expectedStep.years || 0);\n      const month =\n        this.activeDate.getMonth() + direction * (expectedStep.months || 0);\n      this.activeDate = new Date(year, month, 1);\n\n      this.refreshView();\n      this.activeDateChange.emit(this.activeDate);\n    }\n  }\n\n  toggleMode(_direction: number): void {\n    const direction = _direction || 1;\n\n    if (\n      (this.datepickerMode === this.maxMode && direction === 1) ||\n      (this.datepickerMode === this.minMode && direction === -1)\n    ) {\n      return;\n    }\n\n    if (this.datepickerMode) {\n      this.datepickerMode = this.modes[this.modes.indexOf(this.datepickerMode) + direction];\n    }\n\n    this.refreshView();\n  }\n\n  protected getCustomClassForDate(date: Date): string {\n    if (!this.customClass) {\n      return '';\n    }\n    // todo: build a hash of custom classes, it will work faster\n    const customClassObject: ({\n      date: Date;\n      mode: string;\n      clazz: string;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } | undefined) = this.customClass.find((customClass: any) => {\n      return (\n        customClass.date.valueOf() === date.valueOf() &&\n        customClass.mode === this.datepickerMode\n      );\n    }, this);\n\n    return customClassObject === undefined ? '' : customClassObject.clazz;\n  }\n\n  protected compareDateDisabled(\n    date1Disabled: { date: Date; mode: string },\n    date2: Date\n  ): number | undefined {\n    if (date1Disabled === undefined || date2 === undefined) {\n      return undefined;\n    }\n\n    if (date1Disabled.mode === 'day' && this.compareHandlerDay) {\n      return this.compareHandlerDay(date1Disabled.date, date2);\n    }\n\n    if (date1Disabled.mode === 'month' && this.compareHandlerMonth) {\n      return this.compareHandlerMonth(date1Disabled.date, date2);\n    }\n\n    if (date1Disabled.mode === 'year' && this.compareHandlerYear) {\n      return this.compareHandlerYear(date1Disabled.date, date2);\n    }\n\n    return undefined;\n  }\n\n  protected isDisabled(date: Date): boolean {\n    let isDateDisabled = false;\n    if (this.dateDisabled) {\n      this.dateDisabled.forEach(\n        (disabledDate: { date: Date; mode: string }) => {\n          if (this.compareDateDisabled(disabledDate, date) === 0) {\n            isDateDisabled = true;\n          }\n        }\n      );\n    }\n\n    if (this.dayDisabled) {\n      isDateDisabled =\n        isDateDisabled ||\n        this.dayDisabled.indexOf(date.getDay()) > -1;\n    }\n\n    if (isDateDisabled) {\n      return isDateDisabled;\n    }\n\n    const minDate = Number(this.minDate && this.compare(date, this.minDate));\n    if (!isNaN(minDate)) {\n      return minDate < 0;\n    }\n\n    const maxDate = Number(this.maxDate && this.compare(date, this.maxDate));\n    if (!isNaN(maxDate)) {\n      return maxDate > 0;\n    }\n\n    return false;\n  }\n}\n"]}