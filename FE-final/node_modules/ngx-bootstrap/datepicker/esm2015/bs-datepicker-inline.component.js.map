{"version":3,"file":"bs-datepicker-inline.component.js","sourceRoot":"","sources":["../../../../src/datepicker/bs-datepicker-inline.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\n\nimport { Subscription } from 'rxjs';\nimport { BsDatepickerInlineConfig } from './bs-datepicker-inline.config';\n\nimport { BsDatepickerConfig } from './bs-datepicker.config';\nimport { DatepickerDateCustomClasses, DatepickerDateTooltipText } from './models';\nimport { BsDatepickerInlineContainerComponent } from './themes/bs/bs-datepicker-inline-container.component';\nimport { checkBsValue } from './utils/bs-calendar-utils';\n\n@Directive({\n  selector: 'bs-datepicker-inline',\n  exportAs: 'bsDatepickerInline'\n})\nexport class BsDatepickerInlineDirective implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Config object for datepicker\n   */\n  @Input() bsConfig?: Partial<BsDatepickerInlineConfig>;\n  /**\n   * Indicates whether datepicker is enabled or not\n   */\n  @Input() isDisabled = false;\n  /**\n   * Minimum date which is available for selection\n   */\n  @Input() minDate?: Date;\n  /**\n   * Maximum date which is available for selection\n   */\n  @Input() maxDate?: Date;\n  /**\n   * Date custom classes\n   */\n  @Input() dateCustomClasses?: DatepickerDateCustomClasses[];\n  /**\n   * Date tooltip text\n   */\n  @Input() dateTooltipTexts?: DatepickerDateTooltipText[];\n  /**\n   * Disable specific dates\n   */\n  @Input() datesEnabled?: Date[];\n  /**\n   * Enable specific dates\n   */\n  @Input() datesDisabled?: Date[];\n  /**\n   * Emits when datepicker value has been changed\n   */\n  @Output() bsValueChange: EventEmitter<Date> = new EventEmitter();\n  protected _subs: Subscription[] = [];\n  private readonly _datepicker: ComponentLoader<BsDatepickerInlineContainerComponent>;\n  private _datepickerRef?: ComponentRef<BsDatepickerInlineContainerComponent>;\n\n  constructor(\n    public _config: BsDatepickerInlineConfig,\n    private _elementRef: ElementRef,\n    _renderer: Renderer2,\n    _viewContainerRef: ViewContainerRef,\n    cis: ComponentLoaderFactory\n  ) {\n    // todo: assign only subset of fields\n    Object.assign(this, this._config);\n    this._datepicker = cis.createLoader<BsDatepickerInlineContainerComponent>(\n      _elementRef,\n      _viewContainerRef,\n      _renderer\n    );\n  }\n\n  _bsValue?: Date;\n\n  /**\n   * Initial value of datepicker\n   */\n  @Input()\n  set bsValue(value: Date) {\n    if (this._bsValue === value) {\n      return;\n    }\n\n    if (!this._bsValue && value) {\n      const now = new Date();\n\n      value.setMilliseconds(now.getMilliseconds());\n      value.setSeconds(now.getSeconds());\n      value.setMinutes(now.getMinutes());\n      value.setHours(now.getHours());\n    }\n\n    this._bsValue = value;\n    this.bsValueChange.emit(value);\n  }\n\n  ngOnInit(): void {\n    this.setConfig();\n\n    // if date changes from external source (model -> view)\n    this._subs.push(\n      this.bsValueChange.subscribe((value: Date) => {\n        if (this._datepickerRef) {\n          this._datepickerRef.instance.value = value;\n        }\n      })\n    );\n\n    // if date changes from picker (view -> model)\n    if (this._datepickerRef) {\n      this._subs.push(\n        this._datepickerRef.instance.valueChange.subscribe((value: Date) => {\n          this.bsValue = value;\n        })\n      );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this._datepickerRef || !this._datepickerRef.instance) {\n      return;\n    }\n\n    if (changes.minDate) {\n      this._datepickerRef.instance.minDate = this.minDate;\n      this.setConfig();\n    }\n\n    if (changes.maxDate) {\n      this._datepickerRef.instance.maxDate = this.maxDate;\n      this.setConfig();\n    }\n\n    if (changes.datesDisabled) {\n      this._datepickerRef.instance.datesDisabled = this.datesDisabled;\n      this.setConfig();\n    }\n\n    if (changes.datesEnabled) {\n      this._datepickerRef.instance.datesEnabled = this.datesEnabled;\n      this._datepickerRef.instance.value = this._bsValue;\n    }\n\n    if (changes.isDisabled) {\n      this._datepickerRef.instance.isDisabled = this.isDisabled;\n      this.setConfig();\n    }\n\n    if (changes.dateCustomClasses) {\n      this._datepickerRef.instance.dateCustomClasses = this.dateCustomClasses;\n      this.setConfig();\n    }\n\n    if (changes.dateTooltipTexts) {\n      this._datepickerRef.instance.dateTooltipTexts = this.dateTooltipTexts;\n      this.setConfig();\n    }\n  }\n\n  /**\n   * Set config for datepicker\n   */\n  setConfig(): void {\n    if (this._datepicker) {\n      this._datepicker.hide();\n    }\n\n    this._config = Object.assign({}, this._config, this.bsConfig, {\n      value: checkBsValue(this._bsValue, this.maxDate || this.bsConfig && this.bsConfig.maxDate),\n      isDisabled: this.isDisabled,\n      minDate: this.minDate || this.bsConfig && this.bsConfig.minDate,\n      maxDate: this.maxDate || this.bsConfig && this.bsConfig.maxDate,\n      dateCustomClasses: this.dateCustomClasses || this.bsConfig && this.bsConfig.dateCustomClasses,\n      dateTooltipTexts: this.dateTooltipTexts || this.bsConfig && this.bsConfig.dateTooltipTexts,\n      datesDisabled: this.datesDisabled || this.bsConfig && this.bsConfig.datesDisabled,\n      datesEnabled: this.datesEnabled || this.bsConfig && this.bsConfig.datesEnabled\n    });\n\n\n    this._datepickerRef = this._datepicker\n      .provide({ provide: BsDatepickerConfig, useValue: this._config })\n      .attach(BsDatepickerInlineContainerComponent)\n      .to(this._elementRef)\n      .show();\n  }\n\n  ngOnDestroy() {\n    this._datepicker.dispose();\n  }\n}\n"]}