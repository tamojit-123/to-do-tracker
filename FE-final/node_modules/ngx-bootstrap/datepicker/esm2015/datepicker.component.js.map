{"version":3,"file":"datepicker.component.js","sourceRoot":"","sources":["../../../../src/datepicker/datepicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  Provider,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DatePickerInnerComponent } from './datepicker-inner.component';\nimport { DatepickerConfig } from './datepicker.config';\n\nexport const DATEPICKER_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatePickerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'datepicker',\n  template: `\n    <datepicker-inner [activeDate]=\"activeDate\"\n                      (update)=\"onUpdate($event)\"\n                      [locale]=\"config.locale\"\n                      [datepickerMode]=\"datepickerMode\"\n                      [initDate]=\"initDate\"\n                      [minDate]=\"minDate\"\n                      [maxDate]=\"maxDate\"\n                      [minMode]=\"minMode\"\n                      [maxMode]=\"maxMode\"\n                      [showWeeks]=\"showWeeks\"\n                      [formatDay]=\"formatDay\"\n                      [formatMonth]=\"formatMonth\"\n                      [formatYear]=\"formatYear\"\n                      [formatDayHeader]=\"formatDayHeader\"\n                      [formatDayTitle]=\"formatDayTitle\"\n                      [formatMonthTitle]=\"formatMonthTitle\"\n                      [startingDay]=\"startingDay\"\n                      [yearRange]=\"yearRange\"\n                      [customClass]=\"customClass\"\n                      [dateDisabled]=\"dateDisabled\"\n                      [dayDisabled]=\"dayDisabled\"\n                      [onlyCurrentMonth]=\"onlyCurrentMonth\"\n                      [shortcutPropagation]=\"shortcutPropagation\"\n                      [monthColLimit]=\"monthColLimit\"\n                      [yearColLimit]=\"yearColLimit\"\n                      (selectionDone)=\"onSelectionDone($event)\"\n                      (activeDateChange)=\"onActiveDateChange($event)\">\n      <daypicker tabindex=\"0\"></daypicker>\n      <monthpicker tabindex=\"0\"></monthpicker>\n      <yearpicker tabindex=\"0\"></yearpicker>\n    </datepicker-inner>\n    `,\n  providers: [DATEPICKER_CONTROL_VALUE_ACCESSOR]\n})\nexport class DatePickerComponent implements ControlValueAccessor {\n  /** sets datepicker mode, supports: `day`, `month`, `year` */\n  @Input() datepickerMode = 'day';\n  /** default date to show if `ng-model` value is not specified */\n  @Input() initDate?: Date;\n  /**  oldest selectable date */\n  @Input() minDate?: Date;\n  /** latest selectable date */\n  @Input() maxDate?: Date;\n  /** set lower datepicker mode, supports: `day`, `month`, `year` */\n  @Input() minMode?: string;\n  /** sets upper datepicker mode, supports: `day`, `month`, `year` */\n  @Input() maxMode?: string;\n  /** if false week numbers will be hidden */\n  @Input() showWeeks = true;\n  /** format of day in month */\n  @Input() formatDay?: string;\n  /** format of month in year */\n  @Input() formatMonth?: string;\n  /** format of year in year range */\n  @Input() formatYear?: string;\n  /** format of day in week header */\n  @Input() formatDayHeader?: string;\n  /** format of title when selecting day */\n  @Input() formatDayTitle?: string;\n  /** format of title when selecting month */\n  @Input() formatMonthTitle?: string;\n  /** starting day of the week from 0-6 (0=Sunday, ..., 6=Saturday) */\n  @Input() startingDay?: number;\n  /** number of years displayed in year selection */\n  @Input() yearRange?: number;\n  /** if true only dates from the currently displayed month will be shown */\n  @Input() onlyCurrentMonth?: boolean;\n  /** if true shortcut`s event propagation will be disabled */\n  @Input() shortcutPropagation?: boolean;\n  /** number of months displayed in a single row of month picker */\n  @Input() monthColLimit = 3;\n  /** number of years displayed in a single row of year picker */\n  @Input() yearColLimit = 5;\n  /** array of custom css classes to be applied to targeted dates */\n  @Input() customClass?: { date: Date; mode: string; clazz: string }[];\n  /** array of disabled dates */\n  @Input() dateDisabled?: { date: Date; mode: string }[];\n  /** disabled days of the week from 0-6 (0=Sunday, ..., 6=Saturday) */\n  @Input() dayDisabled?: number[];\n\n  /** currently active date */\n  @Input()\n  get activeDate(): Date|undefined {\n    return this._activeDate || this._now;\n  }\n\n  set activeDate(value: Date|undefined) {\n    this._activeDate = value;\n  }\n\n  @Output()\n  selectionDone: EventEmitter<Date> = new EventEmitter<Date>(undefined);\n\n  /** callback to invoke when the activeDate is changed. */\n  @Output()\n  activeDateChange: EventEmitter<Date> = new EventEmitter<Date>(\n    undefined\n  );\n\n  @ViewChild(DatePickerInnerComponent, { static: true })\n  _datePicker?: DatePickerInnerComponent;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onChange: any = Function.prototype;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onTouched: any = Function.prototype;\n\n  config: DatepickerConfig;\n\n  protected _now: Date = new Date();\n  protected _activeDate?: Date;\n\n  constructor(config: DatepickerConfig) {\n    this.config = config;\n    this.configureOptions();\n  }\n\n  configureOptions(): void {\n    Object.assign(this, this.config);\n  }\n\n  onUpdate(event: Date): void {\n    this.activeDate = event;\n    this.onChange(event);\n  }\n\n  onSelectionDone(event: Date): void {\n    this.selectionDone.emit(event);\n  }\n\n  onActiveDateChange(event: Date): void {\n    this.activeDateChange.emit(event);\n  }\n  // todo: support null value\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  writeValue(value: any): void {\n    if (this._datePicker?.compare(value, this._activeDate) === 0) {\n      return;\n    }\n    if (value && value instanceof Date) {\n      this.activeDate = value;\n      this._datePicker?.select(value, false);\n\n      return;\n    }\n\n    this.activeDate = value ? new Date(value) : void 0;\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n"]}