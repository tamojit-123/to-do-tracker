{"version":3,"file":"tooltip.directive.d.ts","sources":["tooltip.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { AvailbleBSPositions } from 'ngx-bootstrap/positioning';\nexport declare class TooltipDirective implements OnInit, OnDestroy {\n    private _elementRef;\n    private _renderer;\n    private _positionService;\n    tooltipId: number;\n    /** sets disable adaptive position */\n    adaptivePosition: boolean;\n    /**\n     * Content to be displayed as tooltip.\n     */\n    tooltip?: string | TemplateRef<unknown>;\n    /** Fired when tooltip content changes */\n    tooltipChange: EventEmitter<string | TemplateRef<unknown>>;\n    /**\n     * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     */\n    placement: AvailbleBSPositions;\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     */\n    triggers: string;\n    /**\n     * A selector specifying the element the tooltip should be appended to.\n     */\n    container?: string;\n    /**\n     * Css class for tooltip container\n     */\n    containerClass: string;\n    boundariesElement?: ('viewport' | 'scrollParent' | 'window');\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     */\n    get isOpen(): boolean;\n    set isOpen(value: boolean);\n    /**\n     * Allows to disable tooltip\n     */\n    isDisabled: boolean;\n    /**\n     * Delay before showing the tooltip\n     */\n    delay: number;\n    /**\n     * Emits an event when the tooltip is shown\n     */\n    onShown: EventEmitter<unknown>;\n    /**\n     * Emits an event when the tooltip is hidden\n     */\n    onHidden: EventEmitter<unknown>;\n    /** @deprecated - please use `tooltip` instead */\n    set htmlContent(value: string | TemplateRef<unknown>);\n    /** @deprecated - please use `placement` instead */\n    set _placement(value: AvailbleBSPositions);\n    /** @deprecated - please use `isOpen` instead */\n    set _isOpen(value: boolean);\n    get _isOpen(): boolean;\n    /** @deprecated - please use `isDisabled` instead */\n    set _enable(value: boolean);\n    get _enable(): boolean;\n    /** @deprecated - please use `container=\"body\"` instead */\n    set _appendToBody(value: boolean);\n    get _appendToBody(): boolean;\n    /** @deprecated - removed, will be added to configuration */\n    tooltipAnimation: boolean;\n    /** @deprecated - will replaced with customClass */\n    set _popupClass(value: string);\n    /** @deprecated - removed */\n    set _tooltipContext(value: undefined);\n    /** @deprecated */\n    set _tooltipPopupDelay(value: number);\n    /** @deprecated */\n    tooltipFadeDuration: number;\n    /** @deprecated -  please use `triggers` instead */\n    get _tooltipTrigger(): string | string[];\n    set _tooltipTrigger(value: string | string[]);\n    /** @deprecated */\n    tooltipStateChanged: EventEmitter<boolean>;\n    protected _delayTimeoutId?: number;\n    protected _tooltipCancelShowFn?: () => void;\n    private _tooltip;\n    private _delaySubscription?;\n    private _ariaDescribedby?;\n    constructor(_viewContainerRef: ViewContainerRef, cis: ComponentLoaderFactory, config: TooltipConfig, _elementRef: ElementRef, _renderer: Renderer2, _positionService: PositioningService);\n    ngOnInit(): void;\n    setAriaDescribedBy(): void;\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    toggle(): void;\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    show(): void;\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    hide(): void;\n    ngOnDestroy(): void;\n}\n"]}