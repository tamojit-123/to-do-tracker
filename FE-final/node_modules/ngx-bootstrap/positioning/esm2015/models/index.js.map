{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/positioning/models/index.ts"],"names":[],"mappings":"AA0CA,MAAM,CAAN,IAAY,kBAwBX;AAxBD,WAAY,kBAAkB;IAC5B,iCAAW,CAAA;IACX,uCAAiB,CAAA;IACjB,mCAAa,CAAA;IACb,qCAAe,CAAA;IACf,mCAAa,CAAA;IACb,mCAAa,CAAA;IACb,oCAAc,CAAA;IACd,2CAAuB,CAAA;IACvB,6CAAyB,CAAA;IACzB,6CAAyB,CAAA;IACzB,mDAA+B,CAAA;IAC/B,mDAA+B,CAAA;IAC/B,iDAA6B,CAAA;IAC7B,iDAA6B,CAAA;IAC7B,2CAAuB,CAAA;IACvB,4CAAwB,CAAA;IACxB,2CAAuB,CAAA;IACvB,2CAAuB,CAAA;IACvB,iDAA6B,CAAA;IAC7B,iDAA6B,CAAA;IAC7B,kDAA8B,CAAA;IAC9B,mDAA+B,CAAA;IAC/B,4CAAwB,CAAA;AAC1B,CAAC,EAxBW,kBAAkB,KAAlB,kBAAkB,QAwB7B;AAED,MAAM,CAAN,IAAY,eAwBX;AAxBD,WAAY,eAAe;IACzB,8BAAW,CAAA;IACX,oCAAiB,CAAA;IACjB,iCAAc,CAAA;IACd,gCAAa,CAAA;IACb,gCAAa,CAAA;IACb,8BAAW,CAAA;IACX,kCAAe,CAAA;IACf,yCAAwB,CAAA;IACxB,wCAAuB,CAAA;IACvB,wCAAuB,CAAA;IACvB,8CAA6B,CAAA;IAC7B,8CAA6B,CAAA;IAC7B,+CAA8B,CAAA;IAC9B,+CAA8B,CAAA;IAC9B,yCAAwB,CAAA;IACxB,0CAAyB,CAAA;IACzB,sCAAqB,CAAA;IACrB,sCAAqB,CAAA;IACrB,4CAA2B,CAAA;IAC3B,4CAA2B,CAAA;IAC3B,gDAA+B,CAAA;IAC/B,gDAA+B,CAAA;IAC/B,0CAAyB,CAAA;AAC3B,CAAC,EAxBW,eAAe,KAAf,eAAe,QAwB1B","sourcesContent":["export interface Offsets {\n  width: number;\n  height: number;\n  bottom?: number;\n  left?: number;\n  right?: number;\n  top?: number;\n  marginTop?: number;\n  marginLeft?: number;\n}\n\nexport interface Data {\n  options: Options;\n  instance: {\n    target: HTMLElement;\n    host: HTMLElement;\n    arrow?: HTMLElement;\n  };\n  offsets: {\n    target: Offsets;\n    host: Offsets;\n    arrow?: Record<string, string | number | HTMLElement>;\n  };\n  positionFixed: boolean;\n  placement: string;\n  placementAuto: boolean;\n}\n\nexport interface Options {\n  placement?: string;\n  modifiers: {\n    flip?: {\n      enabled: boolean;\n    };\n    preventOverflow?: {\n      enabled: boolean;\n      boundariesElement?: string;\n    };\n  };\n  allowedPositions?: string[];\n}\n\nexport enum MapPlacementInToRL {\n  top = 'top',\n  bottom = 'bottom',\n  left = 'left',\n  right = 'right',\n  auto = 'auto',\n  end = 'right',\n  start = 'left',\n  'top left' = 'top left',\n  'top right' = 'top right',\n  'right top' = 'right top',\n  'right bottom' = 'right bottom',\n  'bottom right' = 'bottom right',\n  'bottom left' = 'bottom left',\n  'left bottom' = 'left bottom',\n  'left top' = 'left top',\n  'top start' = 'top left',\n  'top end' = 'top right',\n  'end top' = 'right top',\n  'end bottom' = 'right bottom',\n  'bottom end' = 'bottom right',\n  'bottom start' = 'bottom left',\n  'start bottom' = 'start bottom',\n  'start top' = 'left top',\n}\n\nexport enum PlacementForBs5 {\n  top = 'top',\n  bottom = 'bottom',\n  left = 'start',\n  right = 'end',\n  auto = 'auto',\n  end = 'end',\n  start = 'start',\n  'top left' = 'top start',\n  'top right' = 'top end',\n  'right top' = 'end top',\n  'right bottom' = 'end bottom',\n  'bottom right' = 'bottom end',\n  'bottom left' = 'bottom start',\n  'left bottom' = 'start bottom',\n  'left top' = 'start top',\n  'top start' = 'top start',\n  'top end' = 'top end',\n  'end top' = 'end top',\n  'end bottom' = 'end bottom',\n  'bottom end' = 'bottom end',\n  'bottom start' = 'bottom start',\n  'start bottom' = 'start bottom',\n  'start top' = 'start top',\n}\n\nexport type AvailbleBSPositions = 'top' | 'bottom' | 'left' | 'right' | 'auto' | 'top left' | 'top right' | 'right top' | 'right bottom' | 'bottom right' | 'bottom left' | 'left bottom' | 'left top' | 'start' | 'end' | 'top start' | 'top end' | 'end top' | 'end bottom' | 'bottom end' | 'bottom start' | 'start bottom' | 'start top';\n\n"]}