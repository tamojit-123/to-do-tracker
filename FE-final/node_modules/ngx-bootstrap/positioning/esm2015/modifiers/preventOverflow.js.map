{"version":3,"file":"preventOverflow.js","sourceRoot":"","sources":["../../../../../src/positioning/modifiers/preventOverflow.ts"],"names":[],"mappings":"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","sourcesContent":["import { getBoundaries, isModifierEnabled } from '../utils';\nimport { Data, Offsets } from '../models';\n\nexport function preventOverflow(data: Data) {\n\n  if (!isModifierEnabled(data.options, 'preventOverflow')) {\n    return data;\n  }\n\n  // NOTE: DOM access here\n  // resets the target Offsets's position so that the document size can be calculated excluding\n  // the size of the targetOffsets element itself\n  const transformProp = 'transform';\n  const targetStyles = data.instance.target.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = targetStyles;\n  targetStyles.top = '';\n  targetStyles.left = '';\n  targetStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.target,\n    data.instance.host,\n    0, // padding\n    data.options.modifiers.preventOverflow?.boundariesElement || 'scrollParent',\n    false // positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  targetStyles.top = top;\n  targetStyles.left = left;\n  targetStyles[transformProp] = transform;\n\n  const order = ['left', 'right', 'top', 'bottom'];\n\n  const check = {\n    primary(placement: keyof Offsets) {\n      let value = data.offsets.target[placement];\n      // options.escapeWithReference\n      if ((data.offsets.target[placement] ?? 0) < (boundaries[placement] ?? 0)) {\n        value = Math.max(data.offsets.target[placement] ?? 0, boundaries[placement] ?? 0);\n      }\n\n      return { [placement]: value };\n    },\n    secondary(placement: keyof Offsets) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = data.offsets.target[mainSide];\n      // escapeWithReference\n      if ((data.offsets.target[placement] ?? 0) < (boundaries[placement] ?? 0)) {\n        value = Math.min(\n          data.offsets.target[mainSide] ?? 0,\n          (boundaries[placement] ?? 0) -\n          (placement === 'right' ? data.offsets.target.width : data.offsets.target.height)\n        );\n      }\n\n      return { [mainSide]: value };\n    }\n  };\n\n\n  order.forEach((placement ) => {\n    const side = ['left', 'top', 'start'].indexOf(placement) !== -1 ? check['primary'] : check['secondary'];\n\n    data.offsets.target = {\n      ...data.offsets.target,\n      ...side(placement as keyof Offsets)\n    };\n\n  });\n\n  return data;\n}\n"]}