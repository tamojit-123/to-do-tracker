{"version":3,"file":"getWindowSizes.js","sourceRoot":"","sources":["../../../../../src/positioning/utils/getWindowSizes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAE9B,SAAS,OAAO,CAAC,IAAY,EAAE,IAAiB,EAAE,IAAiB,EAAE,aAAmC;IACtG,MAAM,KAAK,GAAG,IAAyC,CAAC;IACxD,MAAM,KAAK,GAAG,IAAa,CAAC;IAC5B,MAAM,cAAc,GAAG,aAAkD,CAAC;IAE1E,OAAO,IAAI,CAAC,GAAG,CACb,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,EACtB,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,EACtB,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,EACtB,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,EACtB,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,EACtB,IAAI,CAAC,EAAE,CAAC;QACN,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;YACvC,QAAQ,CAAC,cAAc,CAAC,SAAS,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3E,QAAQ,CAAC,cAAc,CAAC,SAAS,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC,CACJ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,QAAkB;IAC/C,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC3B,MAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC;IACtC,MAAM,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAEjE,OAAO;QACL,MAAM,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC;QACpD,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC;KACnD,CAAC;AACJ,CAAC","sourcesContent":["import { isIE } from './isIE';\n\nfunction getSize(axis: string, body: HTMLElement, html: HTMLElement, computedStyle?: CSSStyleDeclaration) {\n  const _body = body as unknown as Record<string, number>;\n  const _html = html as never;\n  const _computedStyle = computedStyle as unknown as Record<string, string>;\n\n  return Math.max(\n    _body[`offset${axis}`],\n    _body[`scroll${axis}`],\n    _html[`client${axis}`],\n    _html[`offset${axis}`],\n    _html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(_html[`offset${axis}`], 10) +\n      parseInt(_computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`], 10) +\n      parseInt(_computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`], 10))\n    : 0\n  );\n}\n\nexport function getWindowSizes(document: Document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) ? getComputedStyle(html) : void 0;\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n"]}