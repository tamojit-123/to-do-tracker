{"version":3,"file":"parsing.types.js","sourceRoot":"","sources":["../../../../../src/chronos/create/parsing.types.ts"],"names":[],"mappings":"","sourcesContent":["import { Locale } from '../locale/locale.class';\nimport { DateArray, DateObject, WeekParsing } from '../types';\nimport { DateInput } from '../testing/chain';\n\nexport interface DateParsingConfig {\n  /** date value */\n  _d?: Date;\n  /** DateArray [year, month, date, .....] */\n  _a?: DateArray;\n  /** date meridiem */\n  _meridiem?: string;\n  /** is PM */\n  _isPm?: boolean;\n  // duplicate param?\n  _isUTC?: boolean;\n  _useUTC?: boolean;\n  /** input to parse: could be string, number[], number, Date, object */\n  _i?: DateInput;\n  /** locale key, 'en' by default */\n  _l?: string;\n  /** date locale obj */\n  _locale?: Locale;\n  /** date format */\n  _f?: string | string[];\n  /** use strict parse format */\n  _strict?: boolean;\n  /** add one day to result at the end of parsing */\n  _nextDay?: boolean;\n  /** utc time offset */\n  _offset?: number;\n  /** time zone */\n  _tzm?: number;\n  /** is valid */\n  _isValid?: boolean;\n  /** date parsing flags */\n  _pf?: DateParsingFlags;\n\n  /** date specific info */\n\n  /** week */\n  _w?: WeekParsing;\n  _dayOfYear?: number;\n  /** used in set offset */\n  _changeInProgress?: boolean;\n  /* used only in diff method */\n  _zoneDelta?: number;\n}\n\nexport interface DateParsingFlags {\n  _overflowDayOfYear?: boolean;\n  _overflowWeeks?: boolean;\n  _overflowWeekday?: boolean;\n  score?: number;\n  bigHour?: boolean;\n  empty: boolean;\n  unusedTokens: string[];\n  unusedInput: string[];\n  overflow: number;\n  charsLeftOver: number;\n  nullInput: boolean;\n  invalidMonth: boolean;\n  invalidWeekday?: boolean;\n  invalidFormat: boolean;\n  userInvalidated: boolean;\n  iso: boolean;\n  parsedDateParts: DateArray;\n  meridiem: string;\n  rfc2822: boolean;\n  weekdayMismatch: boolean;\n}\n"]}