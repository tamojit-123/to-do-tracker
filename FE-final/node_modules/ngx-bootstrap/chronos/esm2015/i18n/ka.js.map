{"version":3,"file":"ka.js","sourceRoot":"","sources":["../../../../../src/chronos/i18n/ka.ts"],"names":[],"mappings":"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","sourcesContent":["import { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\n\nexport const kaLocale: LocaleData =  {\n  abbr: 'ka',\n  months : {\n    format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n    standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\n  },\n  monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n  weekdays : {\n    standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n    format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n    isFormat: /(წინა|შემდეგ)/\n  },\n  weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n  weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n  longDateFormat : {\n    LT : 'h:mm A',\n    LTS : 'h:mm:ss A',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY h:mm A',\n    LLLL : 'dddd, D MMMM YYYY h:mm A'\n  },\n  calendar : {\n    sameDay : '[დღეს] LT[-ზე]',\n    nextDay : '[ხვალ] LT[-ზე]',\n    lastDay : '[გუშინ] LT[-ზე]',\n    nextWeek : '[შემდეგ] dddd LT[-ზე]',\n    lastWeek : '[წინა] dddd LT-ზე',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future(s: number): string {\n      var st = s.toString();\n      return (/(წამი|წუთი|საათი|წელი)/).test(st) ?\n      st.replace(/ი$/, 'ში') :\n      st + 'ში';\n    },\n    past(s: number): string {\n      var st = s.toString();\n      if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(st)) {\n        return st.replace(/(ი|ე)$/, 'ის წინ');\n      }\n      if ((/წელი/).test(st)) {\n        return st.replace(/წელი$/, 'წლის წინ');\n      }\n    },\n    s : 'რამდენიმე წამი',\n    ss : '%d წამი',\n    m : 'წუთი',\n    mm : '%d წუთი',\n    h : 'საათი',\n    hh : '%d საათი',\n    d : 'დღე',\n    dd : '%d დღე',\n    M : 'თვე',\n    MM : '%d თვე',\n    y : 'წელი',\n    yy : '%d წელი'\n  },\n  dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n  ordinal(_num: number, _period: string): string {\n    const num = Number(_num);\n    if (num === 0) {\n      return num.toString();\n    }\n    if (num === 1) {\n      return num + '-ლი';\n    }\n    if ((num < 20) || (num <= 100 && (num % 20 === 0)) || (num % 100 === 0)) {\n      return 'მე-' + num;\n    }\n    return num + '-ე';\n  },\n  week : {\n    dow : 1,\n    doy : 4\n  }\n};\n"]}