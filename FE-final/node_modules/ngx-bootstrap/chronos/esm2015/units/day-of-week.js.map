{"version":3,"file":"day-of-week.js","sourceRoot":"","sources":["../../../../../src/chronos/units/day-of-week.ts"],"names":[],"mappings":"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","sourcesContent":["import { addFormatToken } from '../format/format';\nimport { Locale } from '../locale/locale.class';\nimport { getDay } from '../utils/date-getters';\nimport { addRegexToken, match1to2 } from '../parse/regex';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addWeekParseToken } from '../parse/token';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { isNumber, isString, toInt } from '../utils/type-checks';\nimport { DateFormatterOptions, WeekParsing } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { add } from '../moment/add-subtract';\nimport { getLocale } from '../locale/locales';\n\n\nexport function initDayOfWeek() {\n// FORMATTING\n\n  addFormatToken('d', null, 'do',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getDay(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n  addFormatToken('dd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('ddd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('dddd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdays(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('e', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getLocaleDayOfWeek(date, opts.locale, opts.isUTC)\n        .toString(10);\n      // return getDay(date, opts.isUTC).toString(10);\n    }\n  );\n  addFormatToken('E', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getISODayOfWeek(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11);\n\n// PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n\n  addRegexToken('dd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n\n  addRegexToken('ddd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysRegex(isStrict);\n  });\n\n  addWeekParseToken(\n    ['dd', 'ddd', 'dddd'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token) {\n      const weekday = config._locale.weekdaysParse(input, token, config._strict);\n      // if we didn't get a weekday name, mark the date as invalid\n      if (weekday != null) {\n        week.d = weekday;\n      } else {\n        getParsingFlags(config).invalidWeekday = !!input;\n      }\n\n      return config;\n    }\n  );\n\n  addWeekParseToken(\n    ['d', 'e', 'E'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\n      week[token] = toInt(input);\n\n      return config;\n    }\n  );\n}\n\n// HELPERS\n\nexport function parseWeekday(input: string | number, locale: Locale): number {\n  if (!isString(input)) {\n    return input;\n  }\n\n  const _num = parseInt(input, 10);\n  if (!isNaN(_num)) {\n    return _num;\n  }\n\n  const _weekDay = locale.weekdaysParse(input);\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n\n  return null;\n}\n\nexport function parseIsoWeekday(input: string | number, locale: Locale = getLocale()): number {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n\n  return isNumber(input) && isNaN(input) ? null : input;\n}\n\n// MOMENTS\n\nexport function getSetDayOfWeek(date: Date, input: number, opts: { isUTC?: boolean; locale: Locale }): Date | number {\n  if (!input) {\n    return getDayOfWeek(date, opts.isUTC);\n  }\n\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\n\nexport function setDayOfWeek(date: Date, input: number, locale = getLocale(), isUTC?: boolean): Date {\n  const day = getDay(date, isUTC);\n  const _input = parseWeekday(input, locale);\n\n  return add(date, _input - day, 'day');\n}\n\nexport function getDayOfWeek(date: Date, isUTC?: boolean): number {\n  return getDay(date, isUTC);\n}\n\n/********************************************/\n\n// todo: utc\n// getSetLocaleDayOfWeek\nexport function getLocaleDayOfWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n\nexport function setLocaleDayOfWeek(date: Date, input: number, opts: { locale?: Locale; isUTC?: boolean } = {}): Date {\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n\n  return add(date, input - weekday, 'day');\n}\n\n\n// getSetISODayOfWeek\nexport function getISODayOfWeek(date: Date, isUTC?: boolean): number {\n  return getDay(date, isUTC) || 7;\n}\n\nexport function setISODayOfWeek(date: Date, input: number | string, opts: { locale?: Locale } = {}): Date {\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n\n  const weekday = parseIsoWeekday(input, opts.locale);\n\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n"]}